{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/PublicVote/getbyid/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicVote"
                ],
                "summary": "GetById PublicVote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PublicVote ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.PublicVote"
                        }
                    },
                    "401": {
                        "description": "Error while GetByIdd",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/candidate/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidate"
                ],
                "summary": "Create Candidate",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Candidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/candidate/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidate"
                ],
                "summary": "Delete Candidate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/candidate/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidate"
                ],
                "summary": "GetAll Candidate",
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetAllCandidate"
                        }
                    },
                    "401": {
                        "description": "Error while GetAlld",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/candidate/getbyid/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidate"
                ],
                "summary": "GetById Candidate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Candidate"
                        }
                    },
                    "401": {
                        "description": "Error while GetByIdd",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/candidate/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidate"
                ],
                "summary": "Update Candidate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Candidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Election"
                ],
                "summary": "Create Election",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Election"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Election"
                ],
                "summary": "Delete Election",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Election"
                ],
                "summary": "GetAll Election",
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetAllElection"
                        }
                    },
                    "401": {
                        "description": "Error while GetAlld",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/getbyid/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Election"
                ],
                "summary": "GetById Election",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Election"
                        }
                    },
                    "401": {
                        "description": "Error while GetByIdd",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Election"
                ],
                "summary": "Update Election",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Election"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Party"
                ],
                "summary": "Create Party",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Party"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Party"
                ],
                "summary": "Delete Party",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Party"
                ],
                "summary": "GetAll Party",
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetAllParty"
                        }
                    },
                    "401": {
                        "description": "Error while GetAlld",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party/getbyid/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Party"
                ],
                "summary": "GetById Party",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Party"
                        }
                    },
                    "401": {
                        "description": "Error while GetByIdd",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Party"
                ],
                "summary": "Update Party",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Party"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/cheak/{id}": {
            "get": {
                "description": "Cheak page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Cheak Public",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cheak Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while GetByIdd",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Create Public",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Public"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Delete Public",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "GetAll Public",
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetAllPublic"
                        }
                    },
                    "401": {
                        "description": "Error while GetAlld",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/getbyid/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "GetById Public",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Public"
                        }
                    },
                    "401": {
                        "description": "Error while GetByIdd",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Update Public",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Public"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public_vote/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicVote"
                ],
                "summary": "Create Public_Vote",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.PublicVote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publicvote/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicVote"
                ],
                "summary": "Delete PublicVote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PublicVote ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publicvote/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicVote"
                ],
                "summary": "GetAll PublicVote",
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetAllPublicVote"
                        }
                    },
                    "401": {
                        "description": "Error while GetAlld",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publicvote/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicVote"
                ],
                "summary": "Update PublicVOTE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PublicVOTE ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.PublicVote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genprotos.Candidate": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "election": {
                    "$ref": "#/definitions/genprotos.Election"
                },
                "id": {
                    "type": "string"
                },
                "party": {
                    "$ref": "#/definitions/genprotos.Party"
                },
                "public": {
                    "$ref": "#/definitions/genprotos.Public"
                }
            }
        },
        "genprotos.Election": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "genprotos.GetAllCandidate": {
            "type": "object",
            "properties": {
                "Candidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Candidate"
                    }
                }
            }
        },
        "genprotos.GetAllElection": {
            "type": "object",
            "properties": {
                "elections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Election"
                    }
                }
            }
        },
        "genprotos.GetAllParty": {
            "type": "object",
            "properties": {
                "partys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Party"
                    }
                }
            }
        },
        "genprotos.GetAllPublic": {
            "type": "object",
            "properties": {
                "publics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Public"
                    }
                }
            }
        },
        "genprotos.GetAllPublicVote": {
            "type": "object",
            "properties": {
                "publicVotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.PublicVote"
                    }
                }
            }
        },
        "genprotos.Party": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_date": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                }
            }
        },
        "genprotos.Public": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "nation": {
                    "type": "string"
                },
                "party": {
                    "$ref": "#/definitions/genprotos.Party"
                }
            }
        },
        "genprotos.PublicVote": {
            "type": "object",
            "properties": {
                "candidate": {
                    "$ref": "#/definitions/genprotos.Candidate"
                },
                "election": {
                    "$ref": "#/definitions/genprotos.Election"
                },
                "id": {
                    "type": "string"
                },
                "public": {
                    "$ref": "#/definitions/genprotos.Public"
                }
            }
        }
    }
}